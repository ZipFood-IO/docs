"use strict";(globalThis.webpackChunkzipfood_docs=globalThis.webpackChunkzipfood_docs||[]).push([[2101],{6918:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Robot Module Documentation 23df6eb935c780df8ae2c27adca8afda","title":"Robot Module Documentation","description":"Created by: Mark Serbol","source":"@site/docs/Robot Module Documentation 23df6eb935c780df8ae2c27adca8afda.md","sourceDirName":".","slug":"/Robot Module Documentation 23df6eb935c780df8ae2c27adca8afda","permalink":"/docs/docs/Robot Module Documentation 23df6eb935c780df8ae2c27adca8afda","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Robot Module Documentation 23df6eb935c780df8ae2c27adca8afda.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Profile Module Documentation","permalink":"/docs/docs/Profile Module Documentation 23df6eb935c780429b91f267f1429977"},"next":{"title":"Users Module Documentation","permalink":"/docs/docs/Users Module Documentation 23bf6eb935c78097bcc4f381ea42f1af"}}');var n=o(4848),t=o(8453);const i={},d="Robot Module Documentation",l={},c=[{value:"<strong>Purpose</strong>",id:"purpose",level:2},{value:"<strong>Controller Endpoints</strong>",id:"controller-endpoints",level:2},{value:"<strong>Main Service:\xa0<code>RobotsService</code></strong>",id:"main-servicerobotsservice",level:2},{value:"Responsibilities",id:"responsibilities",level:3},{value:"Service Dependencies",id:"service-dependencies",level:3},{value:"<strong>DTOs &amp; Schemas</strong>",id:"dtos--schemas",level:2},{value:"<strong>Extending/Customizing</strong>",id:"extendingcustomizing",level:2}];function a(e){const s={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"robot-module-documentation",children:"Robot Module Documentation"})}),"\n",(0,n.jsx)(s.p,{children:"Created by: Mark Serbol\nCreated time: July 27, 2025 2:47 PM\nCategory: API Module, Technical\nLast edited by: Mark Serbol\nLast updated time: July 27, 2025 2:57 PM"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Location:"}),"\xa0",(0,n.jsx)(s.code,{children:"src/robots/"})]}),"\n",(0,n.jsx)(s.h2,{id:"purpose",children:(0,n.jsx)(s.strong,{children:"Purpose"})}),"\n",(0,n.jsx)(s.p,{children:"Manages robot inventory, user robot assignments, robot orders, charging history, and integrates Stripe payments for robot purchases. Handles all robot-related business logic and exposes REST endpoints for robot operations."}),"\n",(0,n.jsx)(s.p,{children:"Manages robot inventory, user robot assignments, robot orders, charging history, and integrates Stripe payments for robot purchases."}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Robot"}),": Represents a physical robot in the system\u2019s inventory. Each robot has attributes like model, price, and capabilities, and is not tied to any user by default."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"User Robot"}),": Represents a robot that has been assigned to a specific user. It tracks ownership, usage, working hours, charge levels, and other user-specific settings. User robots are created when a robot is assigned to a user, enabling personalized management and tracking."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Handles all robot-related business logic and exposes REST endpoints for both robot inventory and user robot operations."}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"controller-endpoints",children:(0,n.jsx)(s.strong,{children:"Controller Endpoints"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Endpoints are documented in Swagger; here is a summary:"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"GET /robots"}),"\xa0\u2014 List all robots"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"POST /robots/orders"}),"\xa0\u2014 Order a robot (Stripe payment intent, then order)"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"GET /robots/orders"}),"\xa0\u2014 List user\u2019s robot orders"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"GET /robots/user-robots"}),"\xa0\u2014 List user\u2019s assigned robots"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"POST /robots/user-robots"}),"\xa0\u2014 Assign a robot to a user by serial"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"PATCH /robots/user-robots/:id"}),"\xa0\u2014 Update user robot details"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"POST /robots/upload-robot-photo/:id"}),"\xa0\u2014 Upload photo for a user robot"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"GET /robots/available-user-robots"}),"\xa0\u2014 List available robots for assignment"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"GET /robots/user-robots/:id/charge-history"}),"\xa0\u2014 Get charging history for a user robot"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"POST /robots/user-robots/:id/charge-history"}),"\xa0\u2014 Add charging history entry"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"PATCH /robots/user-robots/:id/charge-history/:id"}),"\xa0\u2014 Update charging history entry"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"main-servicerobotsservice",children:(0,n.jsxs)(s.strong,{children:["Main Service:\xa0",(0,n.jsx)(s.code,{children:"RobotsService"})]})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Location:"}),"\xa0",(0,n.jsx)(s.code,{children:"src/robots/robots.service.ts"})]}),"\n",(0,n.jsx)(s.h3,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Robot Inventory Management:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"robots()"}),": List all robots."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"robot(id)"}),": Get robot by ID."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"createRobot(data)"}),": Create a new robot."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"updateRobot(id, data)"}),": Update robot details."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"deleteRobot(id)"}),": Delete a robot."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"User Robot Assignment & Management:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"getUserRobots(userId, id?)"}),": List user\u2019s robots (optionally by ID)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"createUserRobot(user_id, robot_id, serial_id)"}),": Assign robot to user."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"updateUserRobot(id, data)"}),": Update user robot details."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"getRobotSerial(serial)"}),": Get robot serial info."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"useRobotSerial(serial, user_robot_id)"}),": Mark serial as used."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Order Management:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"createRobotOrder({ ... })"}),": Create a robot order (with payment info)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"createRobotOrderHistory(robot_orders_id, status?)"}),": Add order history entry."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"getRobotOrders(userId, filter?)"}),": List user\u2019s robot orders."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"updateRobotOrder(where, data)"}),": Update robot order."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Payment Integration:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"createPaymentIntent({ ... })"}),": Create Stripe payment intent for robot purchase."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Charging History:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"getRobotChargeHistoryList(user_robot_id)"}),": List charging history for a user robot."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"getRobotChargeHistory(id)"}),": Get charging history entry."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"createRobotChargeHistory(data)"}),": Add charging history entry."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"updateRobotChargeHistory(where, data)"}),": Update charging history entry."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Availability & Location:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"getAvailableUserRobots(latitude?, longitude?, autoAcceptOrders?, radius?)"}),": List available robots for assignment, with location filtering."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"service-dependencies",children:"Service Dependencies"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"PrismaService"}),": Database access"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"Stripe"}),": Payment processing"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"geolib"}),": Location-based filtering"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"dtos--schemas",children:(0,n.jsx)(s.strong,{children:"DTOs & Schemas"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"**RobotOrderDto, UpdateUserRobotDto, RobotChargingHistoryDto, RobotChargingHistoryCreateDto, RobotChargingHistoryUpdateDto:**Generated from Zod schemas, ensuring type safety and validation."}),"\n",(0,n.jsxs)(s.li,{children:["**Validation:**Uses Zod and\xa0",(0,n.jsx)(s.code,{children:"@anatine/zod-nestjs"}),"\xa0for DTO validation and OpenAPI integration."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"extendingcustomizing",children:(0,n.jsx)(s.strong,{children:"Extending/Customizing"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Add new robot/user robot fields in the Prisma schema and update DTOs/schemas."}),"\n",(0,n.jsx)(s.li,{children:"Extend controller/service for additional robot features (e.g., maintenance, error reporting)."}),"\n",(0,n.jsxs)(s.li,{children:["Integrate additional payment methods by updating\xa0",(0,n.jsx)(s.code,{children:"createPaymentIntent"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add new business logic in\xa0",(0,n.jsx)(s.code,{children:"robots.service.ts"}),"\xa0as needed."]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"Note on Frontend vs Backend Robot Assignment"}),"\n",(0,n.jsxs)(s.p,{children:["The frontend UX currently supports only a single robot per account, so you\u2019ll often see code like\xa0",(0,n.jsx)(s.code,{children:"const userRobot = userRobots?.data[0];"}),"\xa0to select the first robot."]}),"\n",(0,n.jsx)(s.p,{children:"However, the backend is designed to allow multiple robots per user, and API responses may return an array of user robots."}),"\n",(0,n.jsx)(s.p,{children:"If you plan to extend the frontend to support multiple robots, you\u2019ll need to update the UI and logic to handle the full array from the backend."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>d});var r=o(6540);const n={},t=r.createContext(n);function i(e){const s=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);