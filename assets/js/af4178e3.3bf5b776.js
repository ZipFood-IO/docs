"use strict";(globalThis.webpackChunkzipfood_docs=globalThis.webpackChunkzipfood_docs||[]).push([[8806],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var s=i(6540);const l={},r=s.createContext(l);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},9090:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"profile-module","title":"Profile Module Documentation","description":"Tags: API Module Technical User Management","source":"@site/docs/profile-module.md","sourceDirName":".","slug":"/profile-module","permalink":"/docs/docs/profile-module","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/profile-module.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ZIPFood Payouts Guide (Pilots)","permalink":"/docs/docs/pilot-payouts"},"next":{"title":"ZIPFood Robot Management Guide","permalink":"/docs/docs/robot-management"}}');var l=i(4848),r=i(8453);const o={},d="Profile Module Documentation",t={},c=[{value:"<strong>Purpose</strong>",id:"purpose",level:2},{value:"<strong>Data Model &amp; Schemas</strong>",id:"data-model--schemas",level:2},{value:"Profile Fields",id:"profile-fields",level:3},{value:"<strong>DTOs &amp; Validation</strong>",id:"dtos--validation",level:2},{value:"<strong>Endpoints (Summary)</strong>",id:"endpoints-summary",level:2},{value:"<strong>Main Service:\xa0<code>ProfileService</code></strong>",id:"main-serviceprofileservice",level:2},{value:"Responsibilities",id:"responsibilities",level:3},{value:"<strong>Extending</strong>",id:"extending",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"profile-module-documentation",children:"Profile Module Documentation"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Tags:"})," ",(0,l.jsx)(n.code,{children:"API Module"})," ",(0,l.jsx)(n.code,{children:"Technical"})," ",(0,l.jsx)(n.code,{children:"User Management"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Location:"})," ",(0,l.jsx)(n.code,{children:"src/profile/"})]}),"\n",(0,l.jsx)(n.h2,{id:"purpose",children:(0,l.jsx)(n.strong,{children:"Purpose"})}),"\n",(0,l.jsx)(n.p,{children:"The Profile module manages user profile data for all roles (customer, client, pilot). It supports profile creation, updates, and file uploads (driver license, selfie), and integrates with other modules for user and wallet management."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"data-model--schemas",children:(0,l.jsx)(n.strong,{children:"Data Model & Schemas"})}),"\n",(0,l.jsx)(n.h3,{id:"profile-fields",children:"Profile Fields"}),"\n",(0,l.jsxs)(n.p,{children:["The\xa0",(0,l.jsx)(n.code,{children:"ProfileSchema"}),"\xa0defines the following fields (all optional, depending on user type):"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"driver_license_photo"}),": string \u2014 Path to uploaded driver license image"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"selfie"}),": string \u2014 Path to uploaded selfie image"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"address"}),": any \u2014 Address information (JSON)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ssn"}),": string \u2014 Social Security Number"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"background_check_status"}),": string \u2014 Status of background check"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"document_request_status"}),": string \u2014 Status of document requests"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"business_name"}),": string \u2014 (Client only) Business name"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"business_ein"}),": string \u2014 (Client only) Business EIN"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"business_type"}),": string \u2014 (Client only) Type of business"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"additional_documents"}),": string \u2014 (Client only) Additional documents"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"vehicle_info"}),": string \u2014 (Pilot only) Vehicle information"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"insurance_documents"}),": string \u2014 (Pilot only) Insurance documents"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"cash_out_frequency"}),": string \u2014 Frequency for payouts (customer/pilot)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"wallet_account_id"}),": string \u2014 Stripe wallet/account ID"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"contact_persons"}),": any \u2014 (Client only) Contact persons (JSON)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"is_available"}),": boolean \u2014 (Pilot only) Availability status"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"dtos--validation",children:(0,l.jsx)(n.strong,{children:"DTOs & Validation"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"ProfileDto"}),": Main DTO for profile responses."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"CreateProfileDto"}),": DTO for creating a profile. Requires\xa0",(0,l.jsx)(n.code,{children:"user"}),"\xa0(number) and\xa0",(0,l.jsx)(n.code,{children:"type"}),"\xa0(string) in addition to profile fields."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"UpdateProfileDto"}),": DTO for updating a profile. All fields are optional."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"All DTOs are generated from Zod schemas and validated automatically."}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"endpoints-summary",children:(0,l.jsx)(n.strong,{children:"Endpoints (Summary)"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"GET /profile"}),"\xa0\u2014 Get logged-in user\u2019s profile"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"POST /profile"}),"\xa0\u2014 Create a new profile for a user and type"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"PATCH /profile"}),"\xa0\u2014 Update logged-in user\u2019s profile"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"POST /profile/upload-driver-license"}),"\xa0\u2014 Upload driver license photo"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"POST /profile/upload-selfie"}),"\xa0\u2014 Upload selfie photo"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"GET /profile/view/:id"}),"\xa0\u2014 Render public profile view"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"main-serviceprofileservice",children:(0,l.jsxs)(n.strong,{children:["Main Service:\xa0",(0,l.jsx)(n.code,{children:"ProfileService"})]})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Location:"}),"\xa0",(0,l.jsx)(n.code,{children:"src/profile/profile.service.ts"})]}),"\n",(0,l.jsx)(n.h3,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Profile Retrieval:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"profile(userId)"}),": Returns the profile for a user, mapped by their type (customer, client, pilot)."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Profile Creation:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"createCustomerProfile(data, prisma?)"}),": Creates a customer profile."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"createClientProfile(data, prisma?)"}),": Creates a client profile."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"createPilotProfile(data, prisma?)"}),": Creates a pilot profile."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Profile Update:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"updateCustomerProfile({ where, data }, prisma?)"}),": Updates a customer profile."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"updateClientProfile({ where, data }, prisma?)"}),": Updates a client profile."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"updatePilotProfile({ where, data }, prisma?)"}),": Updates a pilot profile."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type Mapping:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Internally maps user type to the correct Prisma model for profile operations."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Validation:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Ensures user exists before any profile operation."}),"\n",(0,l.jsx)(n.li,{children:"Throws errors for invalid user types or missing profiles."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"extending",children:(0,l.jsx)(n.strong,{children:"Extending"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add new fields to\xa0",(0,l.jsx)(n.code,{children:"ProfileSchema"}),"\xa0and update Prisma models as needed."]}),"\n",(0,l.jsx)(n.li,{children:"Extend DTOs and controller logic for new business requirements."}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Document Information"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Created by: Mark Serbol"}),"\n",(0,l.jsx)(n.li,{children:"Created time: July 27, 2025 9:39 AM"}),"\n",(0,l.jsx)(n.li,{children:"Category: API Module, Technical"}),"\n",(0,l.jsx)(n.li,{children:"Last edited by: Mark Serbol"}),"\n",(0,l.jsx)(n.li,{children:"Last updated time: July 27, 2025 12:37 PM"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);