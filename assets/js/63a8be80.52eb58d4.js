"use strict";(globalThis.webpackChunkzipfood_docs=globalThis.webpackChunkzipfood_docs||[]).push([[4922],{8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var r=s(6540);const i={},d=r.createContext(i);function o(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(d.Provider,{value:n},e.children)}},9590:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Users Module Documentation 23bf6eb935c78097bcc4f381ea42f1af","title":"Users Module Documentation","description":"Created by: Mark Serbol","source":"@site/docs/Users Module Documentation 23bf6eb935c78097bcc4f381ea42f1af.md","sourceDirName":".","slug":"/Users Module Documentation 23bf6eb935c78097bcc4f381ea42f1af","permalink":"/docs/docs/Users Module Documentation 23bf6eb935c78097bcc4f381ea42f1af","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Users Module Documentation 23bf6eb935c78097bcc4f381ea42f1af.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Robot Module Documentation","permalink":"/docs/docs/Robot Module Documentation 23df6eb935c780df8ae2c27adca8afda"},"next":{"title":"Wallet Module Documentation","permalink":"/docs/docs/Wallet Module Documentation 23df6eb935c780d3a33cc8602aec178d"}}');var i=s(4848),d=s(8453);const o={},t="Users Module Documentation",l={},c=[{value:"<strong>Purpose</strong>",id:"purpose",level:2},{value:"<strong>Controller Endpoints</strong>",id:"controller-endpoints",level:2},{value:"<strong>Main Service:\xa0<code>UsersService</code></strong>",id:"main-serviceusersservice",level:2},{value:"Responsibilities",id:"responsibilities",level:3},{value:"Key Methods",id:"key-methods",level:3},{value:"Service Dependencies",id:"service-dependencies",level:3},{value:"<strong>DTOs &amp; Schemas</strong>",id:"dtos--schemas",level:2},{value:"<strong>Extending/Customizing</strong>",id:"extendingcustomizing",level:2}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"users-module-documentation",children:"Users Module Documentation"})}),"\n",(0,i.jsx)(n.p,{children:"Created by: Mark Serbol\nCreated time: July 25, 2025 9:57 AM\nCategory: API Module, Technical\nLast edited by: Mark Serbol\nLast updated time: July 25, 2025 10:06 AM"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Location:"}),"\xa0",(0,i.jsx)(n.code,{children:"src/users/"})]}),"\n",(0,i.jsx)(n.h2,{id:"purpose",children:(0,i.jsx)(n.strong,{children:"Purpose"})}),"\n",(0,i.jsx)(n.p,{children:"Manages user data, including creation, retrieval, update, deletion, and password management. Handles user profile photo uploads and integrates with authentication for protected access."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"controller-endpoints",children:(0,i.jsx)(n.strong,{children:"Controller Endpoints"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Endpoints are documented in Swagger; here is a summary:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"GET /users"}),"\xa0\u2014 Get all users (JWT required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PATCH /users"}),"\xa0\u2014 Update current user\u2019s information (JWT required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"POST /users/upload-user-photo"}),"\xa0\u2014 Upload user profile photo (JWT required)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"main-serviceusersservice",children:(0,i.jsxs)(n.strong,{children:["Main Service:\xa0",(0,i.jsx)(n.code,{children:"UsersService"})]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Location:"}),"\xa0",(0,i.jsx)(n.code,{children:"src/users/users.service.ts"})]}),"\n",(0,i.jsx)(n.h3,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User CRUD:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create, retrieve, update, and delete user records."}),"\n",(0,i.jsx)(n.li,{children:"Find user by email or phone number."}),"\n",(0,i.jsx)(n.li,{children:"List users with filtering, pagination, and sorting."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Password Management:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hashes passwords on creation and update."}),"\n",(0,i.jsx)(n.li,{children:"Supports password reset."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Profile Photo Management:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Updates user\u2019s photo field after upload."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Handling:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Handles unique constraint errors (e.g., duplicate email/phone)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-methods",children:"Key Methods"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"user(where, omitFields?)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Retrieve a single user by unique identifier, with optional field omission."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"findUserByUsername(username)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Find a user by email or phone number."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"users(params)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"List users with optional filters, pagination, and sorting."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"createUser(data, prisma?)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Create a new user, hashing the password if provided."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"updateUser({ where, data }, prisma?)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Update user data, omitting password from the returned object."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"deleteUser(where, prisma?)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Delete a user by unique identifier."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"resetPassword(userId, password, prisma?)"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"Hash and update a user\u2019s password."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"service-dependencies",children:"Service Dependencies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PrismaService"}),": Database access."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bcrypt"}),": Password hashing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"handleUniqueConstraintError"}),": Utility for handling DB constraint errors."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dtos--schemas",children:(0,i.jsx)(n.strong,{children:"DTOs & Schemas"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"**UserDto, CreateUserDto, UpdateUserDto, UserResponseDto, GetUserDto:**Generated from Zod schemas, ensuring type safety and validation."}),"\n",(0,i.jsxs)(n.li,{children:["**Validation:**Uses Zod and\xa0",(0,i.jsx)(n.code,{children:"@anatine/zod-nestjs"}),"\xa0for DTO validation and OpenAPI integration."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"extendingcustomizing",children:(0,i.jsx)(n.strong,{children:"Extending/Customizing"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add new user fields in the Prisma schema and regenerate Zod types."}),"\n",(0,i.jsx)(n.li,{children:"Extend controller/service for additional user-related features (e.g., roles, preferences)."}),"\n",(0,i.jsx)(n.li,{children:"Integrate with other modules (e.g., notifications, orders) as needed."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);